"""start

Revision ID: ff67ab4d895c
Revises: 
Create Date: 2025-01-29 01:36:33.179129

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff67ab4d895c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('baselines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.Column('reference_period', sa.String(length=25), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['id_course'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('baseline_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('minimal_hours', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['baseline_id'], ['baselines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('baseline_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('salt_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_approver', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['baseline_id'], ['baselines.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subcategories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=False),
    sa.Column('hours_limit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_subcategory', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=False),
    sa.Column('hours_limit', sa.Integer(), nullable= True),
    sa.Column('comprobatory_rules', sa.String(length=2048), nullable=True),
    sa.Column('additional_rules', sa.String(length=2048), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['id_subcategory'], ['subcategories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_registers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_approver', sa.Integer(), nullable=True),
    sa.Column('id_category', sa.Integer(), nullable=False),
    sa.Column('id_subcategory', sa.Integer(), nullable=False),
    sa.Column('id_activity', sa.Integer(), nullable=False),
    sa.Column('short_description', sa.String(length=255), nullable=False),
    sa.Column('init_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('wanted_hours', sa.Integer(), nullable=False),
    sa.Column('worked_hours', sa.Integer(), nullable=False),
    sa.Column('computed_hours', sa.Integer(), nullable=True),
    sa.Column('reason_to_approve', sa.String(length=2048), nullable=False),
    sa.Column('approver_feedback', sa.String(length=2048), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('approved_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_activity'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['id_approver'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_category'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['id_subcategory'], ['subcategories.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comprobatory_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_register_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['activity_register_id'], ['activity_registers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comprobatory_documents')
    op.drop_table('activity_registers')
    op.drop_table('activities')
    op.drop_table('subcategories')
    op.drop_table('users')
    op.drop_table('categories')
    op.drop_table('baselines')
    op.drop_table('courses')
    # ### end Alembic commands ###
